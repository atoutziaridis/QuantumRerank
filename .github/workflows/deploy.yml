name: Deploy QuantumRerank

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      platform:
        description: 'Target platform'
        required: true
        default: 'gcp'
        type: choice
        options:
        - aws
        - gcp
        - azure
        - k8s

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Run tests
      run: |
        pytest tests/ -v --cov=quantum_rerank --cov-report=xml
        
    - name: Lint code
      run: |
        flake8 quantum_rerank/ tests/
        
    - name: Type check
      run: |
        mypy quantum_rerank/

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Output image
      id: image
      run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      env:
        QUANTUM_RERANK_IMAGE: ${{ needs.build.outputs.image }}
        QUANTUM_RERANK_API_KEY: ${{ secrets.STAGING_API_KEY }}
        GOOGLE_CLOUD_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}
        AZURE_LOCATION: ${{ vars.AZURE_LOCATION || 'eastus' }}
        PLATFORM: ${{ github.event.inputs.platform || 'gcp' }}
      run: |
        chmod +x scripts/deploy/universal-deploy.sh
        scripts/deploy/universal-deploy.sh --platform $PLATFORM --environment staging
        
    - name: Run deployment tests
      env:
        QUANTUM_RERANK_API_KEY: ${{ secrets.STAGING_API_KEY }}
      run: |
        sleep 30
        chmod +x scripts/test/test-deployment.sh
        scripts/test/test-deployment.sh staging

  deploy-production:
    needs: [build, deploy-staging]
    if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      env:
        QUANTUM_RERANK_IMAGE: ${{ needs.build.outputs.image }}
        QUANTUM_RERANK_API_KEY: ${{ secrets.PRODUCTION_API_KEY }}
        GOOGLE_CLOUD_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}
        AZURE_LOCATION: ${{ vars.AZURE_LOCATION || 'eastus' }}
        PLATFORM: ${{ github.event.inputs.platform || 'gcp' }}
      run: |
        chmod +x scripts/deploy/universal-deploy.sh
        scripts/deploy/universal-deploy.sh --platform $PLATFORM --environment production
        
    - name: Run production validation
      env:
        QUANTUM_RERANK_API_KEY: ${{ secrets.PRODUCTION_API_KEY }}
      run: |
        sleep 60
        chmod +x scripts/test/test-deployment.sh
        scripts/test/test-deployment.sh production
        
    - name: Create GitHub release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        body: |
          ## QuantumRerank Release ${{ github.ref_name }}
          
          Successfully deployed to production.
          
          ### Changes
          ${{ github.event.head_commit.message }}
          
          ### Docker Image
          `${{ needs.build.outputs.image }}`
          
          ### Deployment Details
          - Platform: ${{ env.PLATFORM }}
          - Environment: production
          - Build SHA: ${{ github.sha }}