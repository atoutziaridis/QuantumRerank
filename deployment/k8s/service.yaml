# Kubernetes Service for QuantumRerank API
apiVersion: v1
kind: Service
metadata:
  name: quantum-rerank-service
  labels:
    app: quantum-rerank
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8001"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: quantum-rerank
    component: api
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 8001
    targetPort: metrics
    protocol: TCP
  sessionAffinity: None

---
# LoadBalancer Service for external access (optional)
apiVersion: v1
kind: Service
metadata:
  name: quantum-rerank-loadbalancer
  labels:
    app: quantum-rerank
    component: api
  annotations:
    # Cloud provider specific annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    app: quantum-rerank
    component: api
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  sessionAffinity: None
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Configure as needed for security

---
# Headless Service for StatefulSet (if needed)
apiVersion: v1
kind: Service
metadata:
  name: quantum-rerank-headless
  labels:
    app: quantum-rerank
    component: api
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: quantum-rerank
    component: api
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP